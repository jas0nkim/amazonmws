# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-06-23 00:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import rfi.fields


class Migration(migrations.Migration):

    dependencies = [
        ('rfi_account_profiles', '0006_auto_20171116_2029'),
        ('rfi_listings', '0017_remove_amazonscrapetask_ebay_store'),
    ]

    operations = [
        migrations.CreateModel(
            name='EbayInventoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(db_index=True, max_length=100)),
                ('ship_to_location_availability_quantity', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('aspects', models.TextField(blank=True, null=True)),
                ('image_urls', models.TextField(blank=True, null=True)),
                ('inventory_item_group_keys', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('ebay_store', rfi.fields.RfiForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rfi_account_profiles.EbayStore')),
            ],
            options={
                'db_table': 'ebay_inventory_items',
            },
        ),
        migrations.CreateModel(
            name='EbayInventoryItemGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_item_group_key', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('common_aspects', models.TextField(blank=True, null=True)),
                ('image_urls', models.TextField(blank=True, null=True)),
                ('variant_skus', models.TextField(blank=True, null=True)),
                ('aspects_image_varies_by', models.TextField(blank=True, null=True)),
                ('varies_by_specifications', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('ebay_store', rfi.fields.RfiForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rfi_account_profiles.EbayStore')),
            ],
            options={
                'db_table': 'ebay_inventory_item_groups',
            },
        ),
        migrations.CreateModel(
            name='EbayInventoryLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_location_key', models.CharField(db_index=True, max_length=255)),
                ('address_country', models.CharField(blank=True, max_length=32, null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('ebay_store', rfi.fields.RfiForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rfi_account_profiles.EbayStore')),
            ],
            options={
                'db_table': 'ebay_inventory_locations',
            },
        ),
        migrations.CreateModel(
            name='EbayOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_id', models.CharField(db_index=True, max_length=100)),
                ('listing_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('available_quantity', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('ebay_category_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('payment_policy_id', models.CharField(blank=True, max_length=100, null=True)),
                ('return_policy_id', models.CharField(blank=True, max_length=100, null=True)),
                ('fulfillment_policy_id', models.CharField(blank=True, max_length=100, null=True)),
                ('merchant_location_key', models.CharField(db_index=True, max_length=255)),
                ('original_retail_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('original_retail_price_currency', models.CharField(blank=True, max_length=32, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('price_currency', models.CharField(blank=True, max_length=32, null=True)),
                ('quantity_limit_per_buyer', models.SmallIntegerField(blank=True, null=True)),
                ('store_category_names', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(db_index=True, max_length=100)),
                ('marketplace_id', models.CharField(db_index=True, max_length=32)),
                ('listing_format', models.CharField(db_index=True, max_length=32)),
                ('status', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('ebay_store', rfi.fields.RfiForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rfi_account_profiles.EbayStore')),
            ],
            options={
                'db_table': 'ebay_offers',
            },
        ),
    ]
